name: Python CI

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 15 * * 0"

permissions: read-all

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions: # for EnricoMi/publish-unit-test-result-action
      checks: write
      pull-requests: write # for comment_mode
      contents: read # only for private repository
      issues: read # only for private repository
    strategy:
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.11]
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3.0.0

      - name: Setup python environment
        uses: actions/setup-python@d09bd5e6005b175076f227b13d9730d56e9dcfcb # v4.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup poetry environment
        uses: snok/install-poetry@2bf112a0f6979928eb6b011f39700db589c5961e # v1.3.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache dependencies
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # v3.0.4
        id: poetry_cache_id
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.python-version }}-${{ env.poetry-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        shell: bash
        run: poetry install

      - name: Lint python code by flake8
        continue-on-error: true
        run: |
          poetry run flake8 src/ tests/ --format junit-xml --output-file report.xml
          poetry run flake8 src/ tests/ --format html --htmldir=flake8

      - name: Publish flake8 report to PR
        uses: EnricoMi/publish-unit-test-result-action@f00bb47e1d89c6d98071d1b69e16a2b63c7fbfc1 # v1.39
        if: ${{ env.os == 'ubuntu-latest' }} # linux is only supported
        with:
          check_name: flake8 results
          files: report.xml

      - name: Upload flake8 report to artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
        with:
          name: flake8-report
          path: flake8/

      - name: Test python code by pytest
        continue-on-error: true
        run: poetry run pytest

      - name: Publish pytest report to PR
        uses: EnricoMi/publish-unit-test-result-action@f00bb47e1d89c6d98071d1b69e16a2b63c7fbfc1 # v1.39
        if: ${{ env.os == 'ubuntu-latest' }} # linux is only supported
        with:
          check_name: pytest results
          files: report.xml

      - name: Upload pytest report to artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
        with:
          name: pytest-report
          path: htmlcov/
