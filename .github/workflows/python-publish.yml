name: python publish

on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.11]
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3.0.0
      - uses: actions/setup-python@d09bd5e6005b175076f227b13d9730d56e9dcfcb # v4.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@2bf112a0f6979928eb6b011f39700db589c5961e # v1.3.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # v3.0.4
        id: poetry_cache_id
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: install dependencies
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        shell: bash
        run: poetry install
      - name: generate sbom
        run: poetry run sbom
      - name: build package
        run: poetry build
      - name: upload packages
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
        with:
          name: package
          path: dist/

  pages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.11]
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3.0.0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@2bf112a0f6979928eb6b011f39700db589c5961e # v1.3.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # v3.0.4
        id: poetry_cache_id
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: install dependencies
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        shell: bash
        run: poetry install
      - name: generate sphinx
        run: poetry run sphinx
      - name: deploy document to gh-pages
        uses: crazy-max/ghaction-github-pages@eb08c35b9fab86751edfff4e55cd5cde35ff0e52 # v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_branch: gh-pages
          build_dir: public/
