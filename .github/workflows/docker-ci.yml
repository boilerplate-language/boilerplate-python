name: Docker CI

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 15 * * 0"

permissions: read-all

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  dockerize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup docker environment
        uses: ./.github/actions/docker-setup

      - name: Build container
        id: build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          tags: ${{ env.IMAGE_NAME }}:alpha
          context: .
          outputs: type=docker,dest=/tmp/myimage.tar

      - name: Upload container image to artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: myimage
          path: /tmp/myimage.tar
          retention-days: 1

  scan-trivy:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs: dockerize
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup docker environment
        uses: ./.github/actions/docker-setup

      - name: Download container image from artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: myimage
          path: /tmp

      - name: Load container image
        run: docker load --input /tmp/myimage.tar

      - name: Scan container image by trivy
        uses: aquasecurity/trivy-action@fbd16365eb88e12433951383f5e99bd901fc618f
        with:
          image-ref: "${{ env.IMAGE_NAME }}:alpha"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Publish trivy report to GitHub Security
        uses: github/codeql-action/upload-sarif@00e563ead9f72a8461b24876bee2d0c2e8bd2ee8
        with:
          sarif_file: "trivy-results.sarif"

  scan-grype:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs: dockerize
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup docker environment
        uses: ./.github/actions/docker-setup

      - name: Download container image from artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: myimage
          path: /tmp

      - name: Load container image
        run: docker load --input /tmp/myimage.tar

      - name: Scan container image by grype
        id: grype-image
        uses: anchore/scan-action@4be3c24559b430723e51858969965e163b196957
        with:
          image: "${{ env.IMAGE_NAME }}:alpha"
          severity-cutoff: low
          fail-build: false
          acs-report-enable: true

      - name: Publish grype report to GitHub Security
        uses: github/codeql-action/upload-sarif@00e563ead9f72a8461b24876bee2d0c2e8bd2ee8
        with:
          sarif_file: ${{ steps.grype-image.outputs.sarif }}

  sast-grype:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Scan Dockerfile by grype
        id: grype-files
        uses: anchore/scan-action@4be3c24559b430723e51858969965e163b196957
        with:
          path: "."
          severity-cutoff: low
          fail-build: false
          acs-report-enable: true

      - name: Publish grype report to GitHub Security
        uses: github/codeql-action/upload-sarif@00e563ead9f72a8461b24876bee2d0c2e8bd2ee8
        with:
          sarif_file: ${{ steps.grype-files.outputs.sarif }}

  sast-hadolint:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Scan Dockerfile by hadolint
        uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183
        with:
          recursive: true
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Publish hadolint report to GitHub Security
        uses: github/codeql-action/upload-sarif@00e563ead9f72a8461b24876bee2d0c2e8bd2ee8
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true
